{"version":3,"sources":["hooks/useForm/useForm.js","types/types.js","actions/ui.js","firebase/firebase-config.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleProvider","auth","GoogleAuthProvider","githubProvider","GithubAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snap","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","login","displayName","startLogin","email","password","signInWithEmailAndPassword","then","user","catch","e","message","logout","RegisterScreen","useDispatch","msgError","useSelector","state","ui","password2","isFormValid","trim","length","console","log","isEmail","className","onSubmit","preventDefault","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmail","onChange","autoComplete","placeholder","to","LoginScreen","loading","formValues","disabled","onClick","signInWithPopup","src","alt","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","display","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","NothingSelected","JournalScreen","PrivateRoute","isAuth","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLogged","setIsLogged","onAuthStateChanged","color","height","width","timeout","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.743d6747.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState)\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState)\r\n  }\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n  return [values, handleInputChange, reset]\r\n}\r\n","export const types = {\r\n  login: '[Auth] Login',\r\n  logout: '[Auth] Logout',\r\n  uiSetError: '[UI] Set Error',\r\n  uiRemoveError: '[UI] Remove Error',\r\n  uiStartLoading: '[UI] Start loading',\r\n  uiFinishLoading: '[UI] Finish loading',\r\n  notesAddNew: '[Notes] New note',\r\n  notesActive: '[Notes] Set active note',\r\n  notesLoad: '[Notes] Load notes',\r\n  notesUpdated: '[Notes] Updated note',\r\n  notesFileUrl: '[Notes] Updated image url',\r\n  notesDelete: '[Notes] Delete note',\r\n  notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n}\r\n","import { types } from './../types/types'\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err\r\n})\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError\r\n})\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading\r\n})\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading\r\n})\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBrEebIgKVnZLRBkrKpdcs6tLYdqejeuUY',\r\n  authDomain: 'journal-app-41370.firebaseapp.com',\r\n  databaseURL: 'https://journal-app-41370.firebaseio.com',\r\n  projectId: 'journal-app-41370',\r\n  storageBucket: 'journal-app-41370.appspot.com',\r\n  messagingSenderId: '360755909003',\r\n  appId: '1:360755909003:web:a5145a62be81b9b7ef9f8e'\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebase.firestore()\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nconst githubProvider = new firebase.auth.GithubAuthProvider()\r\n\r\nexport { db, googleProvider, firebase, githubProvider }\r\n","import { db } from '../firebase/firebase-config'\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n  const notes = []\r\n  notesSnap.forEach((snap) => {\r\n    notes.push({\r\n      id: snap.id,\r\n      ...snap.data()\r\n    })\r\n  })\r\n\r\n  return notes\r\n}\r\n","export const fileUpload = async (file) => {\r\n  const cloudUrl = '\thttps://api.cloudinary.com/v1_1/andes/upload'\r\n  const formData = new FormData()\r\n  formData.append('upload_preset', 'journalapp-react')\r\n  formData.append('file', file)\r\n\r\n  const resp = await fetch(cloudUrl, {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n  if (resp.ok) {\r\n    const cloudResp = await resp.json()\r\n    return cloudResp.secure_url\r\n  } else {\r\n    throw await resp.json()\r\n  }\r\n}\r\n","import { db } from '../firebase/firebase-config'\r\nimport { types } from './../types/types'\r\nimport { loadNotes } from './../helpers/loadNotes'\r\nimport Swal from 'sweetalert2'\r\nimport { fileUpload } from './../helpers/fileUpload'\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid\r\n    const newNote = {\r\n      title: '',\r\n      body: '',\r\n      date: new Date().getTime()\r\n    }\r\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n    dispatch(activeNote(doc.id, newNote))\r\n    dispatch(addNewNote(doc.id, newNote))\r\n  }\r\n}\r\nexport const activeNote = (id, note) => ({\r\n  type: types.notesActive,\r\n  payload: {\r\n    id,\r\n    ...note\r\n  }\r\n})\r\nexport const addNewNote = (id, note) => ({\r\n  type: types.notesAddNew,\r\n  payload: {\r\n    id,\r\n    ...note\r\n  }\r\n})\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid)\r\n    dispatch(setNotes(notes))\r\n  }\r\n}\r\nexport const setNotes = (notes) => ({\r\n  type: types.notesLoad,\r\n  payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth\r\n    if (!note.url) {\r\n      delete note.url\r\n    }\r\n    const noteToFirestore = { ...note }\r\n    delete noteToFirestore.id\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n    dispatch(refreshNote(note.id, note))\r\n    Swal.fire('saved', note.title, 'success')\r\n  }\r\n}\r\nexport const refreshNote = (id, note) => ({\r\n  type: types.notesUpdated,\r\n  payload: {\r\n    id,\r\n    note: {\r\n      id,\r\n      ...note\r\n    }\r\n  }\r\n})\r\n\r\n//journalapp-react\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    const { active: activeNote } = getState().notes\r\n    Swal.fire({\r\n      title: 'Uploading',\r\n      text: 'Please wait..',\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading()\r\n      }\r\n    })\r\n    const fileUrl = await fileUpload(file)\r\n    activeNote.url = fileUrl\r\n    dispatch(startSaveNote(activeNote))\r\n    Swal.close()\r\n  }\r\n}\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n    dispatch(deleteNote(id))\r\n    Swal.fire('deleted', '', 'error')\r\n  }\r\n}\r\nexport const deleteNote = (id) => ({\r\n  type: types.notesDelete,\r\n  payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n  type: types.notesLogoutCleaning\r\n})\r\n","import { types } from './../types/types'\r\nimport {\r\n  firebase,\r\n  googleProvider,\r\n  githubProvider\r\n} from '../firebase/firebase-config'\r\nimport { startLoading, finishLoading } from './ui'\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from './notes'\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName\r\n  }\r\n})\r\n\r\nexport const startLogin = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading())\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName))\r\n        dispatch(finishLoading())\r\n      })\r\n      .catch((e) => {\r\n        dispatch(finishLoading())\r\n        Swal.fire('Error', e.message, 'error')\r\n      })\r\n  }\r\n}\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName))\r\n      })\r\n  }\r\n}\r\nexport const startGithubLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(githubProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName))\r\n      })\r\n  }\r\n}\r\nexport const startRegisterWithEmail = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name })\r\n        dispatch(login(user.uid, user.displayName))\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n        Swal.fire('Error', e.message, 'error')\r\n      })\r\n  }\r\n}\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut()\r\n    dispatch(logout())\r\n    dispatch(noteLogout())\r\n  }\r\n}\r\nexport const logout = () => ({\r\n  type: types.logout\r\n})\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from './../../hooks/useForm/useForm'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setError, removeError } from '../../actions/ui'\r\nimport { startRegisterWithEmail } from '../../actions/auth'\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const { msgError } = useSelector((state) => state.ui)\r\n  const initialForm = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  }\r\n  const [{ name, email, password, password2 }, handleInputChange] = useForm(\r\n    initialForm\r\n  )\r\n  const handleRegister = (e) => {\r\n    e.preventDefault()\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmail(email, password, name))\r\n    }\r\n  }\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError('name is required'))\r\n      console.log('name is required')\r\n      return false\r\n    } else if (!isEmail(email)) {\r\n      dispatch(setError('email is not valid'))\r\n      console.log('email is not valid')\r\n      return false\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(setError('password should be at least 6 characters and match'))\r\n      console.log('password should be at least 6 characters and match')\r\n      return false\r\n    }\r\n    dispatch(removeError())\r\n    return true\r\n  }\r\n  return (\r\n    <div className='animate__animated animate__fadeIn  animate__faster'>\r\n      <h3 className='auth__title'>Register</h3>\r\n      <form onSubmit={handleRegister}>\r\n        {msgError && <div className='auth__alert-error'>{msgError}</div>}\r\n        <input\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          autoComplete='off'\r\n          className='auth__input'\r\n          type='text'\r\n          placeholder='name'\r\n          name='name'\r\n        />\r\n        <input\r\n          value={email}\r\n          onChange={handleInputChange}\r\n          autoComplete='off'\r\n          className='auth__input'\r\n          type='email'\r\n          placeholder='email'\r\n          name='email'\r\n        />\r\n        <input\r\n          autoComplete='off'\r\n          value={password}\r\n          onChange={handleInputChange}\r\n          className='auth__input'\r\n          type='password'\r\n          placeholder='password'\r\n          name='password'\r\n        />\r\n        <input\r\n          autoComplete='off'\r\n          value={password2}\r\n          onChange={handleInputChange}\r\n          className='auth__input'\r\n          type='password'\r\n          placeholder='Confirm password'\r\n          name='password2'\r\n        />\r\n        <button className='btn btn-primary btn-block mb-5' type='submit'>\r\n          Register\r\n        </button>\r\n        <Link className='link' to='auth/login'>\r\n          Already registered?\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from './../../hooks/useForm/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  startLogin,\r\n  startGoogleLogin,\r\n  startGithubLogin\r\n} from './../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const { loading } = useSelector((state) => state.ui)\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const { email, password } = formValues\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    dispatch(startLogin(email, password))\r\n  }\r\n  const handleLoginGoogle = () => {\r\n    dispatch(startGoogleLogin())\r\n  }\r\n  const handleLoginGithub = () => {\r\n    dispatch(startGithubLogin())\r\n  }\r\n  return (\r\n    <div className='animate__animated animate__fadeInUp'>\r\n      <h3 className='auth__title'>Login</h3>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          autoComplete='off'\r\n          className='auth__input'\r\n          name='email'\r\n          onChange={handleInputChange}\r\n          placeholder='email'\r\n          type='email'\r\n          value={email}\r\n        />\r\n        <input\r\n          autoComplete='off'\r\n          className='auth__input'\r\n          name='password'\r\n          onChange={handleInputChange}\r\n          placeholder='password'\r\n          type='password'\r\n          value={password}\r\n        />\r\n        <button\r\n          disabled={loading}\r\n          className='btn btn-primary btn-block'\r\n          type='submit'>\r\n          Login\r\n        </button>\r\n        <div className='auth__social-networks'>\r\n          <p>Login with social networks</p>\r\n          <div className='google-btn' onClick={handleLoginGoogle}>\r\n            <div className='google-icon-wrapper'>\r\n              <img\r\n                className='google-icon'\r\n                src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\r\n                alt='google button'\r\n              />\r\n            </div>\r\n            <p className='btn-text'>\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <button\r\n        className='btn btn-dark mt-1 btn-block'\r\n        onClick={handleLoginGithub}>\r\n        <i className='fab fa-github'></i>Login with Github\r\n      </button>\r\n      <Link className='link' to='/auth/register'>\r\n        Create new account\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { RegisterScreen } from './../components/auth/RegisterScreen'\r\nimport { LoginScreen } from './../components/auth/LoginScreen'\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className='auth__main'>\r\n      <div className='auth__box-container'>\r\n        <Switch>\r\n          <Route exact path='/auth/login' component={LoginScreen} />\r\n          <Route exact path='/auth/register' component={RegisterScreen} />\r\n          <Redirect to='/auth/login' />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n  const dispatch = useDispatch()\r\n  const noteDate = moment(date)\r\n  const handleEntryClick = () => {\r\n    dispatch(activeNote(id, { date, title, body, url }))\r\n  }\r\n  return (\r\n    <div\r\n      className='journal__entry pointer animate__animated animate__fadeIn  animate__faster'\r\n      onClick={handleEntryClick}>\r\n      {url && (\r\n        <div\r\n          className='journal__entry-picture'\r\n          style={{\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${url})`\r\n          }}></div>\r\n      )}\r\n      <div className='journal__entry-body'>\r\n        <p className='journal__entry-title'>{title}</p>\r\n        <p className='journal__entry-content'>{body}</p>\r\n      </div>\r\n      <div className='journal__entry-date-box'>\r\n        <span>{noteDate.format('dddd')}</span>\r\n        <h4>{noteDate.format('Do')}</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n  const { notes } = useSelector((state) => state.notes)\r\n  return (\r\n    <div className='journal__entries'>\r\n      {notes.map((note) => (\r\n        <JournalEntry key={note.id} {...note} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from './../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nexport const Sidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const { name } = useSelector((state) => state.auth)\r\n  const handleLogout = () => {\r\n    dispatch(startLogout())\r\n  }\r\n  const handleAddNew = () => {\r\n    dispatch(startNewNote())\r\n  }\r\n  return (\r\n    <aside className='journal__sidebar'>\r\n      <div className='journal__sidebar-navbar'>\r\n        <h3 className='mt-5'>\r\n          <i className='far fa-moon'></i>\r\n          <span>{name}</span>\r\n        </h3>\r\n        <button className='btn' onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className='journal__new-entry' onClick={handleAddNew}>\r\n        <i className='far fa-calendar-plus fa-5x'></i>\r\n        <p className='mt-5'>New entry</p>\r\n      </div>\r\n      <JournalEntries />\r\n    </aside>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from './../../actions/notes'\r\nexport const NotesAppBar = () => {\r\n  const dispatch = useDispatch()\r\n  const { active: note } = useSelector((state) => state.notes)\r\n  const handleSave = () => {\r\n    dispatch(startSaveNote(note))\r\n  }\r\n  const handleAddPicture = () => {\r\n    document.querySelector('#fileSelector').click()\r\n  }\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0]\r\n    if (file) {\r\n      dispatch(startUploading(file))\r\n    }\r\n  }\r\n  return (\r\n    <div className='notes__appbar'>\r\n      <span>28 de agosto 2020</span>\r\n      <input\r\n        id='fileSelector'\r\n        name='file'\r\n        onChange={handleFileChange}\r\n        style={{ display: 'none' }}\r\n        type='file'\r\n      />\r\n      <div>\r\n        <button className='btn' onClick={handleAddPicture}>\r\n          picture\r\n        </button>\r\n        <button className='btn' onClick={handleSave}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from './../../hooks/useForm/useForm'\r\nimport { useEffect } from 'react'\r\nimport { useRef } from 'react'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n  const { active: note } = useSelector((state) => state.notes)\r\n  const [formValues, handleInputChange, reset] = useForm(note)\r\n  const { body, title } = formValues\r\n  const activeId = useRef(note.id)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (activeId.current !== note.id) {\r\n      reset(note)\r\n      activeId.current = note.id\r\n    }\r\n  }, [note, reset])\r\n  useEffect(() => {\r\n    dispatch(activeNote(formValues.id, { ...formValues }))\r\n  }, [dispatch, formValues])\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(note.id))\r\n  }\r\n  return (\r\n    <div className='notes__main-content'>\r\n      <NotesAppBar />\r\n      <div className='notes__content'>\r\n        <input\r\n          className='notes__title-input'\r\n          type='text'\r\n          placeholder='some awesome title'\r\n          autoComplete='off'\r\n          onChange={handleInputChange}\r\n          value={title}\r\n          name='title'\r\n        />\r\n        <textarea\r\n          className='notes__textarea'\r\n          onChange={handleInputChange}\r\n          value={body}\r\n          name='body'\r\n          placeholder='whats happened today'></textarea>\r\n        {note.url && (\r\n          <div className='notes__image'>\r\n            <img src={note.url} alt='imagen' />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className='btn btn-danger' onClick={handleDelete}>\r\n        Borrar\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n  return (\r\n    <div className='nothing__main-content'>\r\n      <p>\r\n        select something <br /> or create an entry!\r\n      </p>\r\n      <i className='fas fa-star fa-4x mt-5'></i>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes)\r\n  return (\r\n    <div className='journal__main-content animate__animated animate__fadeIn  animate__faster'>\r\n      <Sidebar />\r\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to='/auth/login' />\r\n      }\r\n    />\r\n  )\r\n}\r\nPrivateRoute.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { PropTypes } from 'prop-types'\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? <Redirect to='/' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\nPublicRoute.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from './../components/journal/JournalScreen'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from './../actions/auth'\r\nimport Loader from 'react-loader-spinner'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { startLoadingNotes } from './../actions/notes'\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch()\r\n  const [checking, setChecking] = useState(true)\r\n  const [isLogged, setIsLogged] = useState(false)\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName))\r\n        setIsLogged(true)\r\n        dispatch(startLoadingNotes(user.uid))\r\n      } else {\r\n        setIsLogged(false)\r\n      }\r\n      setChecking(false)\r\n    })\r\n  }, [dispatch, setChecking, setIsLogged])\r\n  if (checking) {\r\n    return (\r\n      <Loader\r\n        className='loading'\r\n        type='Rings'\r\n        color='#5c62c9'\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute isAuth={isLogged} path='/auth' component={AuthRouter} />\r\n          <PrivateRoute\r\n            isAuth={isLogged}\r\n            exact\r\n            path='/'\r\n            component={JournalScreen}\r\n          />\r\n          <Redirect to='/auth/login' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import { types } from './../types/types'\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload\r\n      }\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null\r\n      }\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { types } from '../types/types'\r\nconst initialState = {\r\n  notes: [],\r\n  active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload\r\n        }\r\n      }\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload]\r\n      }\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map((note) =>\r\n          note.id === action.payload.id ? action.payload.note : note\r\n        )\r\n      }\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter((note) => note.id !== action.payload)\r\n      }\r\n    case types.notesLogoutCleaning:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: []\r\n      }\r\n    case types.notesAddNew:\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { authReducer } from './../reducers/authReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { uiReducer } from './../reducers/uiReducer'\r\nimport { notesReducer } from './../reducers/notesReducer'\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer\r\n})\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import { types } from '../types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName\r\n      }\r\n    case types.logout:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { JournalApp } from './JournalApp'\nimport './styles/styles.scss'\nReactDOM.render(<JournalApp />, document.getElementById('root'))\n"],"sourceRoot":""}